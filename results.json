{"numFailedTestSuites":6,"numFailedTests":38,"numPassedTestSuites":0,"numPassedTests":30,"numPendingTestSuites":0,"numPendingTests":2,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":6,"numTotalTests":70,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1573654621822,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["binarySearchTree"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\n\u001b[1mMatcher error\u001b[22m: \u001b[31mreceived\u001b[39m value must not be null nor undefined\n\nReceived has value: \u001b[31mundefined\u001b[39m\n    at Object.<anonymous> (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/part-two/__test__/binarySearchTree.test.js:11:30)\n    at Object.asyncJestTest (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at resolve (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:43:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at promise.then (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:73:41)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:189:7)"],"fullName":"binarySearchTree should have methods named \"insert\", \"contains\", and \"depthFirstLog","location":null,"status":"failed","title":"should have methods named \"insert\", \"contains\", and \"depthFirstLog"},{"ancestorTitles":["binarySearchTree"],"failureMessages":["TypeError: Cannot read property 'insert' of undefined\n    at Object.<anonymous> (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/part-two/__test__/binarySearchTree.test.js:17:22)\n    at Object.asyncJestTest (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at resolve (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:43:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at promise.then (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:73:41)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:189:7)"],"fullName":"binarySearchTree should insert values at the correct location in the tree","location":null,"status":"failed","title":"should insert values at the correct location in the tree"},{"ancestorTitles":["binarySearchTree"],"failureMessages":["TypeError: Cannot read property 'insert' of undefined\n    at Object.<anonymous> (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/part-two/__test__/binarySearchTree.test.js:26:22)\n    at Object.asyncJestTest (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at resolve (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:43:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at promise.then (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:73:41)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:189:7)"],"fullName":"binarySearchTree should have a working \"contains\" method","location":null,"status":"failed","title":"should have a working \"contains\" method"},{"ancestorTitles":["binarySearchTree"],"failureMessages":["TypeError: Cannot read property 'insert' of undefined\n    at Object.<anonymous> (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/part-two/__test__/binarySearchTree.test.js:38:22)\n    at Object.asyncJestTest (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at resolve (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:43:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at promise.then (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:73:41)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:189:7)"],"fullName":"binarySearchTree should execute a callback on every value in a tree using \"depthFirstLog\"","location":null,"status":"failed","title":"should execute a callback on every value in a tree using \"depthFirstLog\""}],"endTime":1573654624046,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mbinarySearchTree › should have methods named \"insert\", \"contains\", and \"depthFirstLog\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\n    \u001b[1mMatcher error\u001b[22m: \u001b[31mreceived\u001b[39m value must not be null nor undefined\n\n    Received has value: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 10 | \u001b[39m  it(\u001b[32m'should have methods named \"insert\", \"contains\", and \"depthFirstLog'\u001b[39m\u001b[33m,\u001b[39m \u001b[36mfunction\u001b[39m() {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 11 | \u001b[39m    expect(binarySearchTree)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m\"insert\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                             \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 12 | \u001b[39m    expect(binarySearchTree)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m\"contains\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 13 | \u001b[39m    expect(binarySearchTree)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m\"depthFirstLog\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 14 | \u001b[39m  })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[2m\u001b[0m\u001b[36mpart-two/__test__/binarySearchTree.test.js\u001b[39m\u001b[0m\u001b[2m:11:30)\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mbinarySearchTree › should insert values at the correct location in the tree\u001b[39m\u001b[22m\n\n    TypeError: Cannot read property 'insert' of undefined\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 15 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 16 | \u001b[39m  it(\u001b[32m\"should insert values at the correct location in the tree\"\u001b[39m\u001b[33m,\u001b[39m \u001b[36mfunction\u001b[39m() {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 17 | \u001b[39m    binarySearchTree\u001b[33m.\u001b[39minsert(\u001b[35m2\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                     \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 18 | \u001b[39m    binarySearchTree\u001b[33m.\u001b[39minsert(\u001b[35m3\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 19 | \u001b[39m    binarySearchTree\u001b[33m.\u001b[39minsert(\u001b[35m7\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 20 | \u001b[39m    binarySearchTree\u001b[33m.\u001b[39minsert(\u001b[35m6\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[2m\u001b[0m\u001b[36mpart-two/__test__/binarySearchTree.test.js\u001b[39m\u001b[0m\u001b[2m:17:22)\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mbinarySearchTree › should have a working \"contains\" method\u001b[39m\u001b[22m\n\n    TypeError: Cannot read property 'insert' of undefined\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 24 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 25 | \u001b[39m  it(\u001b[32m'should have a working \"contains\" method'\u001b[39m\u001b[33m,\u001b[39m \u001b[36mfunction\u001b[39m() {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 26 | \u001b[39m    binarySearchTree\u001b[33m.\u001b[39minsert(\u001b[35m2\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                     \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 27 | \u001b[39m    binarySearchTree\u001b[33m.\u001b[39minsert(\u001b[35m3\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 28 | \u001b[39m    binarySearchTree\u001b[33m.\u001b[39minsert(\u001b[35m7\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 29 | \u001b[39m    expect(binarySearchTree\u001b[33m.\u001b[39mcontains(\u001b[35m7\u001b[39m))\u001b[33m.\u001b[39mtoEqual(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[2m\u001b[0m\u001b[36mpart-two/__test__/binarySearchTree.test.js\u001b[39m\u001b[0m\u001b[2m:26:22)\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mbinarySearchTree › should execute a callback on every value in a tree using \"depthFirstLog\"\u001b[39m\u001b[22m\n\n    TypeError: Cannot read property 'insert' of undefined\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 36 | \u001b[39m      array\u001b[33m.\u001b[39mpush(value)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 37 | \u001b[39m    }\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 38 | \u001b[39m    binarySearchTree\u001b[33m.\u001b[39minsert(\u001b[35m2\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                     \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 39 | \u001b[39m    binarySearchTree\u001b[33m.\u001b[39minsert(\u001b[35m3\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 40 | \u001b[39m    binarySearchTree\u001b[33m.\u001b[39mdepthFirstLog(func)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 41 | \u001b[39m    expect(array)\u001b[33m.\u001b[39mtoEqual([\u001b[35m5\u001b[39m\u001b[33m,\u001b[39m \u001b[35m2\u001b[39m\u001b[33m,\u001b[39m \u001b[35m3\u001b[39m])\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[2m\u001b[0m\u001b[36mpart-two/__test__/binarySearchTree.test.js\u001b[39m\u001b[0m\u001b[2m:38:22)\u001b[2m\u001b[22m\n","name":"/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/part-two/__test__/binarySearchTree.test.js","startTime":1573654623280,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["tree"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"addChild\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"children\": null, \"value\": undefined}\u001b[39m\n    at Object.<anonymous> (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/part-two/__test__/tree.test.js:11:18)\n    at Object.asyncJestTest (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at resolve (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:43:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at promise.then (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:73:41)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:189:7)"],"fullName":"tree should have methods named \"addChild\" and \"contains\", and a property named \"value\"","location":null,"status":"failed","title":"should have methods named \"addChild\" and \"contains\", and a property named \"value\""},{"ancestorTitles":["tree"],"failureMessages":["TypeError: tree.addChild is not a function\n    at Object.<anonymous> (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/part-two/__test__/tree.test.js:17:10)\n    at Object.asyncJestTest (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at resolve (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:43:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at promise.then (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:73:41)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:189:7)"],"fullName":"tree should add children to the tree","location":null,"status":"failed","title":"should add children to the tree"},{"ancestorTitles":["tree"],"failureMessages":["TypeError: tree.addChild is not a function\n    at Object.<anonymous> (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/part-two/__test__/tree.test.js:22:10)\n    at Object.asyncJestTest (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at resolve (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:43:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at promise.then (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:73:41)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:189:7)"],"fullName":"tree should return true for a value that the tree contains","location":null,"status":"failed","title":"should return true for a value that the tree contains"},{"ancestorTitles":["tree"],"failureMessages":["TypeError: tree.addChild is not a function\n    at Object.<anonymous> (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/part-two/__test__/tree.test.js:27:10)\n    at Object.asyncJestTest (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at resolve (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:43:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at promise.then (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:73:41)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:189:7)"],"fullName":"tree should return false for a value that was not added","location":null,"status":"failed","title":"should return false for a value that was not added"},{"ancestorTitles":["tree"],"failureMessages":["TypeError: tree.addChild is not a function\n    at Object.<anonymous> (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/part-two/__test__/tree.test.js:32:10)\n    at Object.asyncJestTest (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at resolve (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:43:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at promise.then (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:73:41)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:189:7)"],"fullName":"tree should be able to add children to a tree's child","location":null,"status":"failed","title":"should be able to add children to a tree's child"},{"ancestorTitles":["tree"],"failureMessages":["TypeError: tree.addChild is not a function\n    at Object.<anonymous> (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/part-two/__test__/tree.test.js:38:10)\n    at Object.asyncJestTest (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at resolve (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:43:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at promise.then (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:73:41)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:189:7)"],"fullName":"tree should correctly detect nested children","location":null,"status":"failed","title":"should correctly detect nested children"}],"endTime":1573654624056,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mtree › should have methods named \"addChild\" and \"contains\", and a property named \"value\"\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected path: \u001b[32m\"addChild\"\u001b[39m\n    Received path: \u001b[31m[]\u001b[39m\n\n    Received value: \u001b[31m{\"children\": null, \"value\": undefined}\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 10 | \u001b[39m  it(\u001b[32m'should have methods named \"addChild\" and \"contains\", and a property named \"value\"'\u001b[39m\u001b[33m,\u001b[39m \u001b[36mfunction\u001b[39m() {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 11 | \u001b[39m    expect(tree)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m\"addChild\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                 \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 12 | \u001b[39m    expect(tree)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m\"contains\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 13 | \u001b[39m    expect(tree)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m\"value\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 14 | \u001b[39m  })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[2m\u001b[0m\u001b[36mpart-two/__test__/tree.test.js\u001b[39m\u001b[0m\u001b[2m:11:18)\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mtree › should add children to the tree\u001b[39m\u001b[22m\n\n    TypeError: tree.addChild is not a function\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 15 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 16 | \u001b[39m  it(\u001b[32m\"should add children to the tree\"\u001b[39m\u001b[33m,\u001b[39m \u001b[36mfunction\u001b[39m() {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 17 | \u001b[39m    tree\u001b[33m.\u001b[39maddChild(\u001b[35m5\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m         \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 18 | \u001b[39m    expect(tree\u001b[33m.\u001b[39mchildren[\u001b[35m0\u001b[39m]\u001b[33m.\u001b[39mvalue)\u001b[33m.\u001b[39mtoEqual(\u001b[35m5\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 19 | \u001b[39m  })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 20 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[2m\u001b[0m\u001b[36mpart-two/__test__/tree.test.js\u001b[39m\u001b[0m\u001b[2m:17:10)\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mtree › should return true for a value that the tree contains\u001b[39m\u001b[22m\n\n    TypeError: tree.addChild is not a function\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 20 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 21 | \u001b[39m  it(\u001b[32m\"should return true for a value that the tree contains\"\u001b[39m\u001b[33m,\u001b[39m \u001b[36mfunction\u001b[39m() {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 22 | \u001b[39m    tree\u001b[33m.\u001b[39maddChild(\u001b[35m5\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m         \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 23 | \u001b[39m    expect(tree\u001b[33m.\u001b[39mcontains(\u001b[35m5\u001b[39m))\u001b[33m.\u001b[39mtoEqual(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 24 | \u001b[39m  })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 25 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[2m\u001b[0m\u001b[36mpart-two/__test__/tree.test.js\u001b[39m\u001b[0m\u001b[2m:22:10)\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mtree › should return false for a value that was not added\u001b[39m\u001b[22m\n\n    TypeError: tree.addChild is not a function\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 25 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 26 | \u001b[39m  it(\u001b[32m\"should return false for a value that was not added\"\u001b[39m\u001b[33m,\u001b[39m \u001b[36mfunction\u001b[39m() {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 27 | \u001b[39m    tree\u001b[33m.\u001b[39maddChild(\u001b[35m5\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m         \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 28 | \u001b[39m    expect(tree\u001b[33m.\u001b[39mcontains(\u001b[35m6\u001b[39m))\u001b[33m.\u001b[39mtoEqual(\u001b[36mfalse\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 29 | \u001b[39m  })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 30 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[2m\u001b[0m\u001b[36mpart-two/__test__/tree.test.js\u001b[39m\u001b[0m\u001b[2m:27:10)\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mtree › should be able to add children to a tree's child\u001b[39m\u001b[22m\n\n    TypeError: tree.addChild is not a function\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 30 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 31 | \u001b[39m  it(\u001b[32m\"should be able to add children to a tree's child\"\u001b[39m\u001b[33m,\u001b[39m \u001b[36mfunction\u001b[39m() {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 32 | \u001b[39m    tree\u001b[33m.\u001b[39maddChild(\u001b[35m5\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m         \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 33 | \u001b[39m    tree\u001b[33m.\u001b[39mchildren[\u001b[35m0\u001b[39m]\u001b[33m.\u001b[39maddChild(\u001b[35m6\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 34 | \u001b[39m    expect(tree\u001b[33m.\u001b[39mchildren[\u001b[35m0\u001b[39m]\u001b[33m.\u001b[39mchildren[\u001b[35m0\u001b[39m]\u001b[33m.\u001b[39mvalue)\u001b[33m.\u001b[39mtoEqual(\u001b[35m6\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 35 | \u001b[39m  })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[2m\u001b[0m\u001b[36mpart-two/__test__/tree.test.js\u001b[39m\u001b[0m\u001b[2m:32:10)\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mtree › should correctly detect nested children\u001b[39m\u001b[22m\n\n    TypeError: tree.addChild is not a function\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 36 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 37 | \u001b[39m  it(\u001b[32m\"should correctly detect nested children\"\u001b[39m\u001b[33m,\u001b[39m \u001b[36mfunction\u001b[39m() {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 38 | \u001b[39m    tree\u001b[33m.\u001b[39maddChild(\u001b[35m5\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m         \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 39 | \u001b[39m    tree\u001b[33m.\u001b[39maddChild(\u001b[35m6\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 40 | \u001b[39m    tree\u001b[33m.\u001b[39mchildren[\u001b[35m0\u001b[39m]\u001b[33m.\u001b[39maddChild(\u001b[35m7\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 41 | \u001b[39m    tree\u001b[33m.\u001b[39mchildren[\u001b[35m1\u001b[39m]\u001b[33m.\u001b[39maddChild(\u001b[35m8\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[2m\u001b[0m\u001b[36mpart-two/__test__/tree.test.js\u001b[39m\u001b[0m\u001b[2m:38:10)\u001b[2m\u001b[22m\n","name":"/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/part-two/__test__/tree.test.js","startTime":1573654623275,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["linkedList"],"failureMessages":[],"fullName":"linkedList should have a head and tail","location":null,"status":"passed","title":"should have a head and tail"},{"ancestorTitles":["linkedList"],"failureMessages":[],"fullName":"linkedList should have methods named \"addToTail\", \"removeHead\", and \"contains\"","location":null,"status":"passed","title":"should have methods named \"addToTail\", \"removeHead\", and \"contains\""},{"ancestorTitles":["linkedList"],"failureMessages":["TypeError: Cannot read property 'value' of null\n    at Object.<anonymous> (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/part-two/__test__/linkedList.test.js:23:28)\n    at Object.asyncJestTest (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at resolve (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:43:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at promise.then (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:73:41)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:189:7)"],"fullName":"linkedList should designate a new tail when new nodes are added","location":null,"status":"failed","title":"should designate a new tail when new nodes are added"},{"ancestorTitles":["linkedList"],"failureMessages":["TypeError: Cannot read property 'value' of null\n    at Object.<anonymous> (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/part-two/__test__/linkedList.test.js:31:28)\n    at Object.asyncJestTest (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at resolve (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:43:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at promise.then (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:73:41)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:189:7)"],"fullName":"linkedList should remove the head from the list when removeHead is called","location":null,"status":"failed","title":"should remove the head from the list when removeHead is called"},{"ancestorTitles":["linkedList"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m4\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.<anonymous> (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/part-two/__test__/linkedList.test.js:38:37)\n    at Object.asyncJestTest (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at resolve (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:43:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at promise.then (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:73:41)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:189:7)"],"fullName":"linkedList should return the value of the former head when removeHead is called","location":null,"status":"failed","title":"should return the value of the former head when removeHead is called"},{"ancestorTitles":["linkedList"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.<anonymous> (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/part-two/__test__/linkedList.test.js:44:36)\n    at Object.asyncJestTest (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at resolve (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:43:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at promise.then (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:73:41)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:189:7)"],"fullName":"linkedList should contain a value that was added","location":null,"status":"failed","title":"should contain a value that was added"},{"ancestorTitles":["linkedList"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32mfalse\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.<anonymous> (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/part-two/__test__/linkedList.test.js:53:36)\n    at Object.asyncJestTest (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at resolve (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:43:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at promise.then (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:73:41)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:189:7)"],"fullName":"linkedList should not contain a value that was removed","location":null,"status":"failed","title":"should not contain a value that was removed"}],"endTime":1573654624064,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mlinkedList › should designate a new tail when new nodes are added\u001b[39m\u001b[22m\n\n    TypeError: Cannot read property 'value' of null\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 21 | \u001b[39m  it(\u001b[32m\"should designate a new tail when new nodes are added\"\u001b[39m\u001b[33m,\u001b[39m \u001b[36mfunction\u001b[39m() {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 22 | \u001b[39m    linkedList\u001b[33m.\u001b[39maddToTail(\u001b[35m4\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 23 | \u001b[39m    expect(linkedList\u001b[33m.\u001b[39mtail\u001b[33m.\u001b[39mvalue)\u001b[33m.\u001b[39mtoEqual(\u001b[35m4\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                           \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 24 | \u001b[39m    linkedList\u001b[33m.\u001b[39maddToTail(\u001b[35m5\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 25 | \u001b[39m    expect(linkedList\u001b[33m.\u001b[39mtail\u001b[33m.\u001b[39mvalue)\u001b[33m.\u001b[39mtoEqual(\u001b[35m5\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 26 | \u001b[39m  })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[2m\u001b[0m\u001b[36mpart-two/__test__/linkedList.test.js\u001b[39m\u001b[0m\u001b[2m:23:28)\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mlinkedList › should remove the head from the list when removeHead is called\u001b[39m\u001b[22m\n\n    TypeError: Cannot read property 'value' of null\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 29 | \u001b[39m    linkedList\u001b[33m.\u001b[39maddToTail(\u001b[35m4\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 30 | \u001b[39m    linkedList\u001b[33m.\u001b[39maddToTail(\u001b[35m5\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 31 | \u001b[39m    expect(linkedList\u001b[33m.\u001b[39mhead\u001b[33m.\u001b[39mvalue)\u001b[33m.\u001b[39mtoEqual(\u001b[35m4\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                           \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 32 | \u001b[39m    linkedList\u001b[33m.\u001b[39mremoveHead()\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 33 | \u001b[39m    expect(linkedList\u001b[33m.\u001b[39mhead\u001b[33m.\u001b[39mvalue)\u001b[33m.\u001b[39mtoEqual(\u001b[35m5\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 34 | \u001b[39m  })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[2m\u001b[0m\u001b[36mpart-two/__test__/linkedList.test.js\u001b[39m\u001b[0m\u001b[2m:31:28)\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mlinkedList › should return the value of the former head when removeHead is called\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m4\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 36 | \u001b[39m  it(\u001b[32m\"should return the value of the former head when removeHead is called\"\u001b[39m\u001b[33m,\u001b[39m \u001b[36mfunction\u001b[39m() {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 37 | \u001b[39m    linkedList\u001b[33m.\u001b[39maddToTail(\u001b[35m4\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 38 | \u001b[39m    expect(linkedList\u001b[33m.\u001b[39mremoveHead())\u001b[33m.\u001b[39mtoEqual(\u001b[35m4\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                                    \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 39 | \u001b[39m  })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 40 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 41 | \u001b[39m  it(\u001b[32m\"should contain a value that was added\"\u001b[39m\u001b[33m,\u001b[39m \u001b[36mfunction\u001b[39m() {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[2m\u001b[0m\u001b[36mpart-two/__test__/linkedList.test.js\u001b[39m\u001b[0m\u001b[2m:38:37)\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mlinkedList › should contain a value that was added\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 42 | \u001b[39m    linkedList\u001b[33m.\u001b[39maddToTail(\u001b[35m4\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 43 | \u001b[39m    linkedList\u001b[33m.\u001b[39maddToTail(\u001b[35m5\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 44 | \u001b[39m    expect(linkedList\u001b[33m.\u001b[39mcontains(\u001b[35m4\u001b[39m))\u001b[33m.\u001b[39mtoEqual(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                                   \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 45 | \u001b[39m    expect(linkedList\u001b[33m.\u001b[39mcontains(\u001b[35m5\u001b[39m))\u001b[33m.\u001b[39mtoEqual(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 46 | \u001b[39m    expect(linkedList\u001b[33m.\u001b[39mcontains(\u001b[35m6\u001b[39m))\u001b[33m.\u001b[39mtoEqual(\u001b[36mfalse\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 47 | \u001b[39m  })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[2m\u001b[0m\u001b[36mpart-two/__test__/linkedList.test.js\u001b[39m\u001b[0m\u001b[2m:44:36)\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mlinkedList › should not contain a value that was removed\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32mfalse\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 51 | \u001b[39m    linkedList\u001b[33m.\u001b[39maddToTail(\u001b[35m5\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 52 | \u001b[39m    linkedList\u001b[33m.\u001b[39mremoveHead()\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 53 | \u001b[39m    expect(linkedList\u001b[33m.\u001b[39mcontains(\u001b[35m4\u001b[39m))\u001b[33m.\u001b[39mtoEqual(\u001b[36mfalse\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                                   \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 54 | \u001b[39m  })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 55 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 56 | \u001b[39m  \u001b[90m// add more tests here to test the functionality of linkedList\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[2m\u001b[0m\u001b[36mpart-two/__test__/linkedList.test.js\u001b[39m\u001b[0m\u001b[2m:53:36)\u001b[2m\u001b[22m\n","name":"/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/part-two/__test__/linkedList.test.js","startTime":1573654623280,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["graph"],"failureMessages":[],"fullName":"graph should have methods named \"addNode\", \"contains\", \"removeNode\", \"addEdge\", \"hasEdge\", \"removeEdge\" and \"forEachNode\"","location":null,"status":"passed","title":"should have methods named \"addNode\", \"contains\", \"removeNode\", \"addEdge\", \"hasEdge\", \"removeEdge\" and \"forEachNode\""},{"ancestorTitles":["graph"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.<anonymous> (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/part-two/__test__/graph.test.js:22:31)\n    at Object.asyncJestTest (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at resolve (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:43:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at promise.then (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:73:41)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:189:7)"],"fullName":"graph should store values as nodes that were inserted","location":null,"status":"failed","title":"should store values as nodes that were inserted"},{"ancestorTitles":["graph"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.<anonymous> (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/part-two/__test__/graph.test.js:27:31)\n    at Object.asyncJestTest (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at resolve (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:43:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at promise.then (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:73:41)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:189:7)"],"fullName":"graph should remove nodes that were inserted","location":null,"status":"failed","title":"should remove nodes that were inserted"},{"ancestorTitles":["graph"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.<anonymous> (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/part-two/__test__/graph.test.js:37:33)\n    at Object.asyncJestTest (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at resolve (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:43:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at promise.then (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:73:41)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:189:7)"],"fullName":"graph should create edges between two nodes","location":null,"status":"failed","title":"should create edges between two nodes"},{"ancestorTitles":["graph"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.<anonymous> (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/part-two/__test__/graph.test.js:45:33)\n    at Object.asyncJestTest (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at resolve (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:43:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at promise.then (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:73:41)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:189:7)"],"fullName":"graph should remove edges between nodes","location":null,"status":"failed","title":"should remove edges between nodes"},{"ancestorTitles":["graph"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.<anonymous> (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/part-two/__test__/graph.test.js:54:33)\n    at Object.asyncJestTest (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at resolve (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:43:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at promise.then (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:73:41)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:189:7)"],"fullName":"graph should remove edges between nodes when a node is removed","location":null,"status":"failed","title":"should remove edges between nodes when a node is removed"},{"ancestorTitles":["graph"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.<anonymous> (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/part-two/__test__/graph.test.js:68:33)\n    at Object.asyncJestTest (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at resolve (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:43:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at promise.then (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:73:41)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:189:7)"],"fullName":"graph should execute a callback on each node in the graph","location":null,"status":"failed","title":"should execute a callback on each node in the graph"}],"endTime":1573654624069,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mgraph › should store values as nodes that were inserted\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 20 | \u001b[39m  it(\u001b[32m\"should store values as nodes that were inserted\"\u001b[39m\u001b[33m,\u001b[39m \u001b[36mfunction\u001b[39m() {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 21 | \u001b[39m    graph\u001b[33m.\u001b[39maddNode(\u001b[35m1\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 22 | \u001b[39m    expect(graph\u001b[33m.\u001b[39mcontains(\u001b[35m1\u001b[39m))\u001b[33m.\u001b[39mtoEqual(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                              \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 23 | \u001b[39m  })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 24 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 25 | \u001b[39m  it(\u001b[32m\"should remove nodes that were inserted\"\u001b[39m\u001b[33m,\u001b[39m \u001b[36mfunction\u001b[39m() {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[2m\u001b[0m\u001b[36mpart-two/__test__/graph.test.js\u001b[39m\u001b[0m\u001b[2m:22:31)\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mgraph › should remove nodes that were inserted\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 25 | \u001b[39m  it(\u001b[32m\"should remove nodes that were inserted\"\u001b[39m\u001b[33m,\u001b[39m \u001b[36mfunction\u001b[39m() {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 26 | \u001b[39m    graph\u001b[33m.\u001b[39maddNode(\u001b[35m2\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 27 | \u001b[39m    expect(graph\u001b[33m.\u001b[39mcontains(\u001b[35m2\u001b[39m))\u001b[33m.\u001b[39mtoEqual(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                              \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 28 | \u001b[39m    graph\u001b[33m.\u001b[39mremoveNode(\u001b[35m2\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 29 | \u001b[39m    expect(graph\u001b[33m.\u001b[39mcontains(\u001b[35m2\u001b[39m))\u001b[33m.\u001b[39mtoEqual(\u001b[36mfalse\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 30 | \u001b[39m  })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[2m\u001b[0m\u001b[36mpart-two/__test__/graph.test.js\u001b[39m\u001b[0m\u001b[2m:27:31)\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mgraph › should create edges between two nodes\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 35 | \u001b[39m    graph\u001b[33m.\u001b[39maddNode(\u001b[35m3\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 36 | \u001b[39m    graph\u001b[33m.\u001b[39maddEdge(\u001b[35m3\u001b[39m\u001b[33m,\u001b[39m \u001b[35m2\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 37 | \u001b[39m    expect(graph\u001b[33m.\u001b[39mhasEdge(\u001b[35m3\u001b[39m\u001b[33m,\u001b[39m \u001b[35m2\u001b[39m))\u001b[33m.\u001b[39mtoEqual(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                                \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 38 | \u001b[39m    expect(graph\u001b[33m.\u001b[39mhasEdge(\u001b[35m3\u001b[39m\u001b[33m,\u001b[39m \u001b[35m1\u001b[39m))\u001b[33m.\u001b[39mtoEqual(\u001b[36mfalse\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 39 | \u001b[39m  })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 40 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[2m\u001b[0m\u001b[36mpart-two/__test__/graph.test.js\u001b[39m\u001b[0m\u001b[2m:37:33)\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mgraph › should remove edges between nodes\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 43 | \u001b[39m    graph\u001b[33m.\u001b[39maddNode(\u001b[35m5\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 44 | \u001b[39m    graph\u001b[33m.\u001b[39maddEdge(\u001b[35m5\u001b[39m\u001b[33m,\u001b[39m \u001b[35m4\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 45 | \u001b[39m    expect(graph\u001b[33m.\u001b[39mhasEdge(\u001b[35m4\u001b[39m\u001b[33m,\u001b[39m \u001b[35m5\u001b[39m))\u001b[33m.\u001b[39mtoEqual(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                                \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 46 | \u001b[39m    graph\u001b[33m.\u001b[39mremoveEdge(\u001b[35m5\u001b[39m\u001b[33m,\u001b[39m \u001b[35m4\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 47 | \u001b[39m    expect(graph\u001b[33m.\u001b[39mhasEdge(\u001b[35m4\u001b[39m\u001b[33m,\u001b[39m \u001b[35m5\u001b[39m))\u001b[33m.\u001b[39mtoEqual(\u001b[36mfalse\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 48 | \u001b[39m  })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[2m\u001b[0m\u001b[36mpart-two/__test__/graph.test.js\u001b[39m\u001b[0m\u001b[2m:45:33)\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mgraph › should remove edges between nodes when a node is removed\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 52 | \u001b[39m    graph\u001b[33m.\u001b[39maddNode(\u001b[35m5\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 53 | \u001b[39m    graph\u001b[33m.\u001b[39maddEdge(\u001b[35m5\u001b[39m\u001b[33m,\u001b[39m \u001b[35m4\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 54 | \u001b[39m    expect(graph\u001b[33m.\u001b[39mhasEdge(\u001b[35m4\u001b[39m\u001b[33m,\u001b[39m \u001b[35m5\u001b[39m))\u001b[33m.\u001b[39mtoEqual(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                                \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 55 | \u001b[39m    graph\u001b[33m.\u001b[39mremoveNode(\u001b[35m5\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 56 | \u001b[39m    expect(graph\u001b[33m.\u001b[39mhasEdge(\u001b[35m4\u001b[39m\u001b[33m,\u001b[39m \u001b[35m5\u001b[39m))\u001b[33m.\u001b[39mtoEqual(\u001b[36mfalse\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 57 | \u001b[39m  })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[2m\u001b[0m\u001b[36mpart-two/__test__/graph.test.js\u001b[39m\u001b[0m\u001b[2m:54:33)\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mgraph › should execute a callback on each node in the graph\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 66 | \u001b[39m    graph\u001b[33m.\u001b[39maddNode(\u001b[35m3\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 67 | \u001b[39m    graph\u001b[33m.\u001b[39mforEachNode(connectToFive)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 68 | \u001b[39m    expect(graph\u001b[33m.\u001b[39mhasEdge(\u001b[35m2\u001b[39m\u001b[33m,\u001b[39m \u001b[35m5\u001b[39m))\u001b[33m.\u001b[39mtoEqual(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                                \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 69 | \u001b[39m    expect(graph\u001b[33m.\u001b[39mhasEdge(\u001b[35m1\u001b[39m\u001b[33m,\u001b[39m \u001b[35m5\u001b[39m))\u001b[33m.\u001b[39mtoEqual(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 70 | \u001b[39m    expect(graph\u001b[33m.\u001b[39mhasEdge(\u001b[35m3\u001b[39m\u001b[33m,\u001b[39m \u001b[35m5\u001b[39m))\u001b[33m.\u001b[39mtoEqual(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 71 | \u001b[39m    expect(graph\u001b[33m.\u001b[39mhasEdge(\u001b[35m5\u001b[39m\u001b[33m,\u001b[39m \u001b[35m5\u001b[39m))\u001b[33m.\u001b[39mtoEqual(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[2m\u001b[0m\u001b[36mpart-two/__test__/graph.test.js\u001b[39m\u001b[0m\u001b[2m:68:33)\u001b[2m\u001b[22m\n","name":"/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/part-two/__test__/graph.test.js","startTime":1573654623274,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["hashTable"],"failureMessages":[],"fullName":"hashTable should have methods named \"insert\", \"remove\", and \"retrieve","location":null,"status":"passed","title":"should have methods named \"insert\", \"remove\", and \"retrieve"},{"ancestorTitles":["hashTable"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m\"Seagal\"\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.<anonymous> (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/part-two/__test__/hashTable.test.js:33:42)\n    at Object.asyncJestTest (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at resolve (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:43:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at promise.then (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:73:41)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:189:7)"],"fullName":"hashTable should store values that were inserted","location":null,"status":"failed","title":"should store values that were inserted"},{"ancestorTitles":["hashTable"],"failureMessages":[],"fullName":"hashTable should not contain values that were not inserted","location":null,"status":"passed","title":"should not contain values that were not inserted"},{"ancestorTitles":["hashTable"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m\"Barker\"\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.<anonymous> (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/part-two/__test__/hashTable.test.js:44:39)\n    at Object.asyncJestTest (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at resolve (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:43:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at promise.then (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:73:41)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:189:7)"],"fullName":"hashTable should overwrite values that have the same key","location":null,"status":"failed","title":"should overwrite values that have the same key"},{"ancestorTitles":["hashTable"],"failureMessages":[],"fullName":"hashTable should not contain values that were removed","location":null,"status":"passed","title":"should not contain values that were removed"},{"ancestorTitles":["hashTable"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m\"val1\"\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.<anonymous> (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/part-two/__test__/hashTable.test.js:62:36)\n    at Object.asyncJestTest (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at resolve (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:43:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at promise.then (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:73:41)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:189:7)"],"fullName":"hashTable should handle hash function collisions","location":null,"status":"failed","title":"should handle hash function collisions"},{"ancestorTitles":["hashTable"],"failureMessages":[],"fullName":"hashTable should double in size when needed","location":null,"status":"pending","title":"should double in size when needed"},{"ancestorTitles":["hashTable"],"failureMessages":[],"fullName":"hashTable should halve in size when needed","location":null,"status":"pending","title":"should halve in size when needed"}],"endTime":1573654624080,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mhashTable › should store values that were inserted\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m\"Seagal\"\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 31 | \u001b[39m  it(\u001b[32m\"should store values that were inserted\"\u001b[39m\u001b[33m,\u001b[39m \u001b[36mfunction\u001b[39m() {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 32 | \u001b[39m    hashTable\u001b[33m.\u001b[39minsert(\u001b[32m\"Steven\"\u001b[39m\u001b[33m,\u001b[39m \u001b[32m\"Seagal\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 33 | \u001b[39m    expect(hashTable\u001b[33m.\u001b[39mretrieve(\u001b[32m\"Steven\"\u001b[39m))\u001b[33m.\u001b[39mtoEqual(\u001b[32m\"Seagal\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                                         \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 34 | \u001b[39m  })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 35 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 36 | \u001b[39m  it(\u001b[32m\"should not contain values that were not inserted\"\u001b[39m\u001b[33m,\u001b[39m \u001b[36mfunction\u001b[39m() {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[2m\u001b[0m\u001b[36mpart-two/__test__/hashTable.test.js\u001b[39m\u001b[0m\u001b[2m:33:42)\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mhashTable › should overwrite values that have the same key\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m\"Barker\"\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 42 | \u001b[39m    hashTable\u001b[33m.\u001b[39minsert(\u001b[32m\"Bob\"\u001b[39m\u001b[33m,\u001b[39m \u001b[32m\"Loblaw\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 43 | \u001b[39m    hashTable\u001b[33m.\u001b[39minsert(\u001b[32m\"Bob\"\u001b[39m\u001b[33m,\u001b[39m \u001b[32m\"Barker\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 44 | \u001b[39m    expect(hashTable\u001b[33m.\u001b[39mretrieve(\u001b[32m\"Bob\"\u001b[39m))\u001b[33m.\u001b[39mtoEqual(\u001b[32m\"Barker\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                                      \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 45 | \u001b[39m  })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 46 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 47 | \u001b[39m  it(\u001b[32m\"should not contain values that were removed\"\u001b[39m\u001b[33m,\u001b[39m \u001b[36mfunction\u001b[39m() {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[2m\u001b[0m\u001b[36mpart-two/__test__/hashTable.test.js\u001b[39m\u001b[0m\u001b[2m:44:39)\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mhashTable › should handle hash function collisions\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m\"val1\"\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 60 | \u001b[39m    hashTable\u001b[33m.\u001b[39minsert(v1\u001b[33m,\u001b[39m v1)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 61 | \u001b[39m    hashTable\u001b[33m.\u001b[39minsert(v2\u001b[33m,\u001b[39m v2)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 62 | \u001b[39m    expect(hashTable\u001b[33m.\u001b[39mretrieve(v1))\u001b[33m.\u001b[39mtoEqual(v1)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                                   \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 63 | \u001b[39m    expect(hashTable\u001b[33m.\u001b[39mretrieve(v2))\u001b[33m.\u001b[39mtoEqual(v2)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 64 | \u001b[39m    getIndexBelowMaxForKey \u001b[33m=\u001b[39m oldHashFunction\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 65 | \u001b[39m  })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[2m\u001b[0m\u001b[36mpart-two/__test__/hashTable.test.js\u001b[39m\u001b[0m\u001b[2m:62:36)\u001b[2m\u001b[22m\n","name":"/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/part-two/__test__/hashTable.test.js","startTime":1573654623274,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["functional stack","stack shared behavior","functional instantiation style"],"failureMessages":[],"fullName":"functional stack stack shared behavior functional instantiation style makes new instances that delegate to appropriate prototype object","location":null,"status":"passed","title":"makes new instances that delegate to appropriate prototype object"},{"ancestorTitles":["functional stack","stack shared behavior","functional instantiation style"],"failureMessages":[],"fullName":"functional stack stack shared behavior functional instantiation style has a .prototype.constructor property that points back to the constructor itself","location":null,"status":"passed","title":"has a .prototype.constructor property that points back to the constructor itself"},{"ancestorTitles":["functional stack","stack shared behavior","functional instantiation style"],"failureMessages":[],"fullName":"functional stack stack shared behavior functional instantiation style does not extend the constructor function","location":null,"status":"passed","title":"does not extend the constructor function"},{"ancestorTitles":["functional stack","stack shared behavior","functional instantiation style"],"failureMessages":[],"fullName":"functional stack stack shared behavior functional instantiation style does not extend the constructor function's prototype","location":null,"status":"passed","title":"does not extend the constructor function's prototype"},{"ancestorTitles":["functional stack","stack shared behavior","functional instantiation style"],"failureMessages":[],"fullName":"functional stack stack shared behavior functional instantiation style does not reference the keyword this","location":null,"status":"passed","title":"does not reference the keyword this"},{"ancestorTitles":["functional stack","stack shared behavior","functional instantiation style"],"failureMessages":[],"fullName":"functional stack stack shared behavior functional instantiation style does reference the return keyword","location":null,"status":"passed","title":"does reference the return keyword"},{"ancestorTitles":["functional stack","stack shared behavior","functional instantiation style"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at Object.<anonymous> (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/part-one/__test__/verifyClass.js:176:14)\n    at Object.asyncJestTest (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at resolve (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:43:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at promise.then (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:73:41)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:189:7)"],"fullName":"functional stack stack shared behavior functional instantiation style does declare variables","location":null,"status":"failed","title":"does declare variables"},{"ancestorTitles":["functional stack","stack shared behavior","functional instantiation style"],"failureMessages":[],"fullName":"functional stack stack shared behavior functional instantiation style does store properties without use of a prototype chain","location":null,"status":"passed","title":"does store properties without use of a prototype chain"},{"ancestorTitles":["functional stack","stack shared behavior","functional instantiation style"],"failureMessages":[],"fullName":"functional stack stack shared behavior functional instantiation style does store methods without use of a prototype chain","location":null,"status":"passed","title":"does store methods without use of a prototype chain"},{"ancestorTitles":["functional stack","stack shared behavior","functional instantiation style"],"failureMessages":[],"fullName":"functional stack stack shared behavior functional instantiation style does not reuse non-function objects across multiple instances","location":null,"status":"passed","title":"does not reuse non-function objects across multiple instances"},{"ancestorTitles":["functional stack","stack shared behavior","functional instantiation style"],"failureMessages":[],"fullName":"functional stack stack shared behavior functional instantiation style does not reuse methods across multiple instances","location":null,"status":"passed","title":"does not reuse methods across multiple instances"},{"ancestorTitles":["functional stack","stack shared behavior"],"failureMessages":[],"fullName":"functional stack stack shared behavior reports a size of zero for a new stack","location":null,"status":"passed","title":"reports a size of zero for a new stack"},{"ancestorTitles":["functional stack","stack shared behavior"],"failureMessages":[],"fullName":"functional stack stack shared behavior reports a size of 2 after adding two items","location":null,"status":"passed","title":"reports a size of 2 after adding two items"},{"ancestorTitles":["functional stack","stack shared behavior"],"failureMessages":[],"fullName":"functional stack stack shared behavior does not error when removing from an empty stack","location":null,"status":"passed","title":"does not error when removing from an empty stack"},{"ancestorTitles":["functional stack","stack shared behavior"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m1\u001b[39m\nReceived: \u001b[31m2\u001b[39m\n    at Object.<anonymous> (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/part-one/__test__/testRunner.js:48:30)\n    at Object.asyncJestTest (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at resolve (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:43:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at promise.then (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:73:41)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:189:7)"],"fullName":"functional stack stack shared behavior reports a size of 1 after adding two items and removing one","location":null,"status":"failed","title":"reports a size of 1 after adding two items and removing one"},{"ancestorTitles":["functional stack","stack shared behavior"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m0\u001b[39m\nReceived: \u001b[31m1\u001b[39m\n    at Object.<anonymous> (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/part-one/__test__/testRunner.js:55:30)\n    at Object.asyncJestTest (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at resolve (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:43:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at promise.then (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:73:41)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:189:7)"],"fullName":"functional stack stack shared behavior reports a size of 0 after removing more items than were added","location":null,"status":"failed","title":"reports a size of 0 after removing more items than were added"},{"ancestorTitles":["functional stack","stack shared behavior"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m\"a\"\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.<anonymous> (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/part-one/__test__/testRunner.js:60:29)\n    at Object.asyncJestTest (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at resolve (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:43:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at promise.then (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:73:41)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:189:7)"],"fullName":"functional stack stack shared behavior allows sequentially additing and removing items","location":null,"status":"failed","title":"allows sequentially additing and removing items"},{"ancestorTitles":["functional stack","stack-specific behavior"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m\"b\"\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.<anonymous> (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/part-one/__test__/testRunner.js:70:29)\n    at Object.asyncJestTest (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at resolve (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:43:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at promise.then (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:73:41)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:189:7)"],"fullName":"functional stack stack-specific behavior removes the most recently added of two items","location":null,"status":"failed","title":"removes the most recently added of two items"},{"ancestorTitles":["functional stack","stack-specific behavior"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m\"b\"\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.<anonymous> (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/part-one/__test__/testRunner.js:78:29)\n    at Object.asyncJestTest (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at resolve (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:43:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at promise.then (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:73:41)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:189:7)"],"fullName":"functional stack stack-specific behavior removes the newest item, after newer items have already been added and removed","location":null,"status":"failed","title":"removes the newest item, after newer items have already been added and removed"},{"ancestorTitles":["functional queue","queue shared behavior","functional instantiation style"],"failureMessages":[],"fullName":"functional queue queue shared behavior functional instantiation style makes new instances that delegate to appropriate prototype object","location":null,"status":"passed","title":"makes new instances that delegate to appropriate prototype object"},{"ancestorTitles":["functional queue","queue shared behavior","functional instantiation style"],"failureMessages":[],"fullName":"functional queue queue shared behavior functional instantiation style has a .prototype.constructor property that points back to the constructor itself","location":null,"status":"passed","title":"has a .prototype.constructor property that points back to the constructor itself"},{"ancestorTitles":["functional queue","queue shared behavior","functional instantiation style"],"failureMessages":[],"fullName":"functional queue queue shared behavior functional instantiation style does not extend the constructor function","location":null,"status":"passed","title":"does not extend the constructor function"},{"ancestorTitles":["functional queue","queue shared behavior","functional instantiation style"],"failureMessages":[],"fullName":"functional queue queue shared behavior functional instantiation style does not extend the constructor function's prototype","location":null,"status":"passed","title":"does not extend the constructor function's prototype"},{"ancestorTitles":["functional queue","queue shared behavior","functional instantiation style"],"failureMessages":[],"fullName":"functional queue queue shared behavior functional instantiation style does not reference the keyword this","location":null,"status":"passed","title":"does not reference the keyword this"},{"ancestorTitles":["functional queue","queue shared behavior","functional instantiation style"],"failureMessages":[],"fullName":"functional queue queue shared behavior functional instantiation style does reference the return keyword","location":null,"status":"passed","title":"does reference the return keyword"},{"ancestorTitles":["functional queue","queue shared behavior","functional instantiation style"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at Object.<anonymous> (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/part-one/__test__/verifyClass.js:176:14)\n    at Object.asyncJestTest (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at resolve (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:43:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at promise.then (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:73:41)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:189:7)"],"fullName":"functional queue queue shared behavior functional instantiation style does declare variables","location":null,"status":"failed","title":"does declare variables"},{"ancestorTitles":["functional queue","queue shared behavior","functional instantiation style"],"failureMessages":[],"fullName":"functional queue queue shared behavior functional instantiation style does store properties without use of a prototype chain","location":null,"status":"passed","title":"does store properties without use of a prototype chain"},{"ancestorTitles":["functional queue","queue shared behavior","functional instantiation style"],"failureMessages":[],"fullName":"functional queue queue shared behavior functional instantiation style does store methods without use of a prototype chain","location":null,"status":"passed","title":"does store methods without use of a prototype chain"},{"ancestorTitles":["functional queue","queue shared behavior","functional instantiation style"],"failureMessages":[],"fullName":"functional queue queue shared behavior functional instantiation style does not reuse non-function objects across multiple instances","location":null,"status":"passed","title":"does not reuse non-function objects across multiple instances"},{"ancestorTitles":["functional queue","queue shared behavior","functional instantiation style"],"failureMessages":[],"fullName":"functional queue queue shared behavior functional instantiation style does not reuse methods across multiple instances","location":null,"status":"passed","title":"does not reuse methods across multiple instances"},{"ancestorTitles":["functional queue","queue shared behavior"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m0\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.<anonymous> (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/part-one/__test__/testRunner.js:104:30)\n    at Object.asyncJestTest (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at resolve (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:43:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at promise.then (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:73:41)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:189:7)"],"fullName":"functional queue queue shared behavior reports a size of zero for a new queue","location":null,"status":"failed","title":"reports a size of zero for a new queue"},{"ancestorTitles":["functional queue","queue shared behavior"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m2\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.<anonymous> (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/part-one/__test__/testRunner.js:110:30)\n    at Object.asyncJestTest (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at resolve (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:43:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at promise.then (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:73:41)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:189:7)"],"fullName":"functional queue queue shared behavior reports a size of 2 after adding two items","location":null,"status":"failed","title":"reports a size of 2 after adding two items"},{"ancestorTitles":["functional queue","queue shared behavior"],"failureMessages":[],"fullName":"functional queue queue shared behavior does not error when removing from an empty queue","location":null,"status":"passed","title":"does not error when removing from an empty queue"},{"ancestorTitles":["functional queue","queue shared behavior"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m1\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.<anonymous> (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/part-one/__test__/testRunner.js:123:30)\n    at Object.asyncJestTest (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at resolve (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:43:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at promise.then (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:73:41)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:189:7)"],"fullName":"functional queue queue shared behavior reports a size of 1 after adding two items and removing one","location":null,"status":"failed","title":"reports a size of 1 after adding two items and removing one"},{"ancestorTitles":["functional queue","queue shared behavior"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m0\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.<anonymous> (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/part-one/__test__/testRunner.js:130:30)\n    at Object.asyncJestTest (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at resolve (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:43:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at promise.then (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:73:41)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:189:7)"],"fullName":"functional queue queue shared behavior reports a size of 0 after removing more items than were added","location":null,"status":"failed","title":"reports a size of 0 after removing more items than were added"},{"ancestorTitles":["functional queue","queue shared behavior"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m\"a\"\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.<anonymous> (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/part-one/__test__/testRunner.js:135:33)\n    at Object.asyncJestTest (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at resolve (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:43:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at promise.then (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:73:41)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:189:7)"],"fullName":"functional queue queue shared behavior allows sequentially adding and removing items","location":null,"status":"failed","title":"allows sequentially adding and removing items"},{"ancestorTitles":["functional queue","queue-specific behavior"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m\"a\"\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.<anonymous> (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/part-one/__test__/testRunner.js:145:33)\n    at Object.asyncJestTest (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at resolve (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:43:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at promise.then (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:73:41)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:189:7)"],"fullName":"functional queue queue-specific behavior removes the least recently added of two items","location":null,"status":"failed","title":"removes the least recently added of two items"},{"ancestorTitles":["functional queue","queue-specific behavior"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m\"b\"\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.<anonymous> (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/part-one/__test__/testRunner.js:153:33)\n    at Object.asyncJestTest (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at resolve (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:43:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at promise.then (/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/node_modules/jest-jasmine2/build/queueRunner.js:73:41)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:189:7)"],"fullName":"functional queue queue-specific behavior removes the oldest item, after newer items have already been added and removed","location":null,"status":"failed","title":"removes the oldest item, after newer items have already been added and removed"}],"endTime":1573654624167,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mfunctional stack › stack shared behavior › functional instantiation style › does declare variables\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\n    Received: \u001b[31mfalse\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 174 | \u001b[39m          assuming(declaresVariables)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 175 | \u001b[39m            \u001b[33m.\u001b[39mexpect(\u001b[35m/var /\u001b[39m\u001b[33m.\u001b[39mtest(constructor))\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 176 | \u001b[39m            \u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m             \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 177 | \u001b[39m        })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 178 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 179 | \u001b[39m        it(\u001b[32m\"does store properties without use of a prototype chain\"\u001b[39m\u001b[33m,\u001b[39m \u001b[36mfunction\u001b[39m() {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[2mpart-one/__test__/verifyClass.js\u001b[2m:176:14)\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mfunctional stack › stack shared behavior › reports a size of 1 after adding two items and removing one\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m1\u001b[39m\n    Received: \u001b[31m2\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 46 | \u001b[39m        stack\u001b[33m.\u001b[39mpush(\u001b[32m\"b\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 47 | \u001b[39m        stack\u001b[33m.\u001b[39mpop()\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 48 | \u001b[39m        expect(stack\u001b[33m.\u001b[39msize())\u001b[33m.\u001b[39mtoEqual(\u001b[35m1\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                             \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 49 | \u001b[39m      })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 50 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 51 | \u001b[39m      it(\u001b[32m\"reports a size of 0 after removing more items than were added\"\u001b[39m\u001b[33m,\u001b[39m \u001b[36mfunction\u001b[39m() {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[2mpart-one/__test__/testRunner.js\u001b[2m:48:30)\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mfunctional stack › stack shared behavior › reports a size of 0 after removing more items than were added\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m0\u001b[39m\n    Received: \u001b[31m1\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 53 | \u001b[39m        stack\u001b[33m.\u001b[39mpop()\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 54 | \u001b[39m        stack\u001b[33m.\u001b[39mpop()\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 55 | \u001b[39m        expect(stack\u001b[33m.\u001b[39msize())\u001b[33m.\u001b[39mtoEqual(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                             \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 56 | \u001b[39m      })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 57 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 58 | \u001b[39m      it(\u001b[32m\"allows sequentially additing and removing items\"\u001b[39m\u001b[33m,\u001b[39m \u001b[36mfunction\u001b[39m() {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[2mpart-one/__test__/testRunner.js\u001b[2m:55:30)\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mfunctional stack › stack shared behavior › allows sequentially additing and removing items\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m\"a\"\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 58 | \u001b[39m      it(\u001b[32m\"allows sequentially additing and removing items\"\u001b[39m\u001b[33m,\u001b[39m \u001b[36mfunction\u001b[39m() {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 59 | \u001b[39m        stack\u001b[33m.\u001b[39mpush(\u001b[32m\"a\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 60 | \u001b[39m        expect(stack\u001b[33m.\u001b[39mpop())\u001b[33m.\u001b[39mtoEqual(\u001b[32m\"a\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                            \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 61 | \u001b[39m        stack\u001b[33m.\u001b[39mpush(\u001b[32m\"b\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 62 | \u001b[39m        expect(stack\u001b[33m.\u001b[39mpop())\u001b[33m.\u001b[39mtoEqual(\u001b[32m\"b\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 63 | \u001b[39m      })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[2mpart-one/__test__/testRunner.js\u001b[2m:60:29)\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mfunctional stack › stack-specific behavior › removes the most recently added of two items\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m\"b\"\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 68 | \u001b[39m        stack\u001b[33m.\u001b[39mpush(\u001b[32m\"a\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 69 | \u001b[39m        stack\u001b[33m.\u001b[39mpush(\u001b[32m\"b\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 70 | \u001b[39m        expect(stack\u001b[33m.\u001b[39mpop())\u001b[33m.\u001b[39mtoEqual(\u001b[32m\"b\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                            \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 71 | \u001b[39m      })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 72 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 73 | \u001b[39m      it(\u001b[32m\"removes the newest item, after newer items have already been added and removed\"\u001b[39m\u001b[33m,\u001b[39m \u001b[36mfunction\u001b[39m() {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[2mpart-one/__test__/testRunner.js\u001b[2m:70:29)\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mfunctional stack › stack-specific behavior › removes the newest item, after newer items have already been added and removed\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m\"b\"\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 76 | \u001b[39m        stack\u001b[33m.\u001b[39mpush(\u001b[32m\"c\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 77 | \u001b[39m        stack\u001b[33m.\u001b[39mpop()\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 78 | \u001b[39m        expect(stack\u001b[33m.\u001b[39mpop())\u001b[33m.\u001b[39mtoEqual(\u001b[32m\"b\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                            \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 79 | \u001b[39m      })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 80 | \u001b[39m    })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 81 | \u001b[39m  })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[2mpart-one/__test__/testRunner.js\u001b[2m:78:29)\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mfunctional queue › queue shared behavior › functional instantiation style › does declare variables\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\n    Received: \u001b[31mfalse\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 174 | \u001b[39m          assuming(declaresVariables)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 175 | \u001b[39m            \u001b[33m.\u001b[39mexpect(\u001b[35m/var /\u001b[39m\u001b[33m.\u001b[39mtest(constructor))\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 176 | \u001b[39m            \u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m             \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 177 | \u001b[39m        })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 178 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 179 | \u001b[39m        it(\u001b[32m\"does store properties without use of a prototype chain\"\u001b[39m\u001b[33m,\u001b[39m \u001b[36mfunction\u001b[39m() {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[2mpart-one/__test__/verifyClass.js\u001b[2m:176:14)\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mfunctional queue › queue shared behavior › reports a size of zero for a new queue\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m0\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 102 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 103 | \u001b[39m      it(\u001b[32m\"reports a size of zero for a new queue\"\u001b[39m\u001b[33m,\u001b[39m \u001b[36mfunction\u001b[39m() {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 104 | \u001b[39m        expect(queue\u001b[33m.\u001b[39msize())\u001b[33m.\u001b[39mtoEqual(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m                             \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 105 | \u001b[39m      })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 106 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 107 | \u001b[39m      it(\u001b[32m\"reports a size of 2 after adding two items\"\u001b[39m\u001b[33m,\u001b[39m \u001b[36mfunction\u001b[39m() {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[2mpart-one/__test__/testRunner.js\u001b[2m:104:30)\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mfunctional queue › queue shared behavior › reports a size of 2 after adding two items\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m2\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 108 | \u001b[39m        queue\u001b[33m.\u001b[39menqueue(\u001b[32m\"a\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 109 | \u001b[39m        queue\u001b[33m.\u001b[39menqueue(\u001b[32m\"b\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 110 | \u001b[39m        expect(queue\u001b[33m.\u001b[39msize())\u001b[33m.\u001b[39mtoEqual(\u001b[35m2\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m                             \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 111 | \u001b[39m      })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 112 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 113 | \u001b[39m      it(\u001b[32m\"does not error when removing from an empty queue\"\u001b[39m\u001b[33m,\u001b[39m \u001b[36mfunction\u001b[39m() {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[2mpart-one/__test__/testRunner.js\u001b[2m:110:30)\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mfunctional queue › queue shared behavior › reports a size of 1 after adding two items and removing one\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m1\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 121 | \u001b[39m        queue\u001b[33m.\u001b[39menqueue(\u001b[32m\"b\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 122 | \u001b[39m        queue\u001b[33m.\u001b[39mdequeue()\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 123 | \u001b[39m        expect(queue\u001b[33m.\u001b[39msize())\u001b[33m.\u001b[39mtoEqual(\u001b[35m1\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m                             \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 124 | \u001b[39m      })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 125 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 126 | \u001b[39m      it(\u001b[32m\"reports a size of 0 after removing more items than were added\"\u001b[39m\u001b[33m,\u001b[39m \u001b[36mfunction\u001b[39m() {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[2mpart-one/__test__/testRunner.js\u001b[2m:123:30)\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mfunctional queue › queue shared behavior › reports a size of 0 after removing more items than were added\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m0\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 128 | \u001b[39m        queue\u001b[33m.\u001b[39mdequeue()\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 129 | \u001b[39m        queue\u001b[33m.\u001b[39mdequeue()\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 130 | \u001b[39m        expect(queue\u001b[33m.\u001b[39msize())\u001b[33m.\u001b[39mtoEqual(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m                             \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 131 | \u001b[39m      })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 132 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 133 | \u001b[39m      it(\u001b[32m\"allows sequentially adding and removing items\"\u001b[39m\u001b[33m,\u001b[39m \u001b[36mfunction\u001b[39m() {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[2mpart-one/__test__/testRunner.js\u001b[2m:130:30)\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mfunctional queue › queue shared behavior › allows sequentially adding and removing items\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m\"a\"\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 133 | \u001b[39m      it(\u001b[32m\"allows sequentially adding and removing items\"\u001b[39m\u001b[33m,\u001b[39m \u001b[36mfunction\u001b[39m() {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 134 | \u001b[39m        queue\u001b[33m.\u001b[39menqueue(\u001b[32m\"a\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 135 | \u001b[39m        expect(queue\u001b[33m.\u001b[39mdequeue())\u001b[33m.\u001b[39mtoEqual(\u001b[32m\"a\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m                                \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 136 | \u001b[39m        queue\u001b[33m.\u001b[39menqueue(\u001b[32m\"b\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 137 | \u001b[39m        expect(queue\u001b[33m.\u001b[39mdequeue())\u001b[33m.\u001b[39mtoEqual(\u001b[32m\"b\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 138 | \u001b[39m      })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[2mpart-one/__test__/testRunner.js\u001b[2m:135:33)\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mfunctional queue › queue-specific behavior › removes the least recently added of two items\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m\"a\"\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 143 | \u001b[39m        queue\u001b[33m.\u001b[39menqueue(\u001b[32m\"a\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 144 | \u001b[39m        queue\u001b[33m.\u001b[39menqueue(\u001b[32m\"b\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 145 | \u001b[39m        expect(queue\u001b[33m.\u001b[39mdequeue())\u001b[33m.\u001b[39mtoEqual(\u001b[32m\"a\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m                                \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 146 | \u001b[39m      })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 147 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 148 | \u001b[39m      it(\u001b[32m\"removes the oldest item, after newer items have already been added and removed\"\u001b[39m\u001b[33m,\u001b[39m \u001b[36mfunction\u001b[39m() {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[2mpart-one/__test__/testRunner.js\u001b[2m:145:33)\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mfunctional queue › queue-specific behavior › removes the oldest item, after newer items have already been added and removed\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m\"b\"\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 151 | \u001b[39m        queue\u001b[33m.\u001b[39mdequeue()\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 152 | \u001b[39m        queue\u001b[33m.\u001b[39menqueue(\u001b[32m\"c\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 153 | \u001b[39m        expect(queue\u001b[33m.\u001b[39mdequeue())\u001b[33m.\u001b[39mtoEqual(\u001b[32m\"b\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m                                \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 154 | \u001b[39m      })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 155 | \u001b[39m    })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 156 | \u001b[39m  })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[2mpart-one/__test__/testRunner.js\u001b[2m:153:33)\u001b[2m\u001b[22m\n","name":"/Users/coderoom2018/Documents/codeStates/Immersive/Common Repository/im-sprint-data-structure/part-one/__test__/index.test.js","startTime":1573654623274,"status":"failed","summary":""}],"wasInterrupted":false}